/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Photo as PrismaPhoto } from "@prisma/client";

export class PhotoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PhotoCountArgs, "select">): Promise<number> {
    return this.prisma.photo.count(args);
  }

  async photos(args: Prisma.PhotoFindManyArgs): Promise<PrismaPhoto[]> {
    return this.prisma.photo.findMany(args);
  }
  async photo(args: Prisma.PhotoFindUniqueArgs): Promise<PrismaPhoto | null> {
    return this.prisma.photo.findUnique(args);
  }
  async createPhoto(args: Prisma.PhotoCreateArgs): Promise<PrismaPhoto> {
    return this.prisma.photo.create(args);
  }
  async updatePhoto(args: Prisma.PhotoUpdateArgs): Promise<PrismaPhoto> {
    return this.prisma.photo.update(args);
  }
  async deletePhoto(args: Prisma.PhotoDeleteArgs): Promise<PrismaPhoto> {
    return this.prisma.photo.delete(args);
  }
}
